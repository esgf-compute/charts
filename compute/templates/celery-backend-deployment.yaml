apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "esgf-compute-wps.fullname" $ }}-celery-backend
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
spec:
  replicas: {{ $.Values.celery.backend.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/component: celery
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: celery
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/celery-backend-configmap.yaml") $ | sha256sum }}
    spec:
      {{- if $.Values.celery.nodeSelector }}
      nodeSelector: 
        {{ $.Values.celery.nodeSelector | toYaml | trimSuffix "\n" }}
      {{- end }}
      {{- if $.Values.celery.imagePullSecret }}
      imagePullSecrets:
      - name: {{ $.Values.celery.imagePullSecret }}
      {{- end }}
      initContainers:
      - name: register
        image: {{ $.Values.celery.image }}:{{ $.Values.celery.imageTag }}
        imagePullPolicy: {{ $.Values.celery.imagePullPolicy }}
        command:
          - tini
          - --
        args:
          - /bin/bash
          - -c
          - "mkdir -p /metrics; until nslookup ${INTERNAL_LB}; do echo 'Waiting'; done; compute-tasks-register"
        resources:
          {{ $.Values.celery.backend.resources | toYaml | trimSuffix "\n" | nindent 10 }}
        envFrom:
        - configMapRef:
            name: {{ template "esgf-compute-wps.fullname" $ }}-celery-backend-config
        env:
        {{- if $.Values.celery.backend.development }}
        - name: DEV
          value: "1"
        {{- end }}
      containers:
      - name: {{ template "esgf-compute-wps.name" $ }}-celery-backend
        image: {{ $.Values.celery.image }}:{{ $.Values.celery.imageTag }}
        imagePullPolicy: {{ $.Values.celery.imagePullPolicy }}
        {{- if $.Values.celery.backend.development }}
        command:
          - /bin/sleep
          - infinity
        {{- else }}
        command:
          - tini
          - --
        args:
          - /bin/bash
          - -c
          - "mkdir -p /metrics && compute-tasks-backend --queue-host ${PROVISIONER_BACKEND}"
        {{- end }}
        resources:
          {{ $.Values.celery.backend.resources | toYaml | trimSuffix "\n" | nindent 10 }}
        envFrom:
        - configMapRef:
            name: {{ template "esgf-compute-wps.fullname" $ }}-celery-backend-config
        env:
        {{- if $.Values.celery.backend.development }}
          - name: DEV
            value: "1"
        {{- end }}
          - name: USER_LIMIT_CPU
            value: {{ .Values.userResources.limit.cpu | quote }}
          - name: USER_LIMIT_MEMORY
            value: {{ .Values.userResources.limit.memory | quote }}
          - name: USER_REQUEST_CPU
            value: {{ .Values.userResources.request.cpu | quote }}
          - name: USER_REQUEST_MEMORY
            value: {{ .Values.userResources.request.memory | quote }}
        volumeMounts:
        - mountPath: /metrics
          name: metrics-volume
      volumes:
      - name: metrics-volume
        emptyDir: {}
