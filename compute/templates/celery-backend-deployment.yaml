apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "esgf-compute-wps.fullname" $ }}-celery-backend
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
spec:
  replicas: {{ $.Values.celery.backend.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/component: celery
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: celery
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/wps-secret.yaml") $ | sha256sum }}
    spec:
      {{- if $.Values.celery.nodeSelector }}
      nodeSelector: 
        {{ $.Values.celery.nodeSelector | toYaml | trimSuffix "\n" }}
      {{- end }}
      {{- if $.Values.celery.imagePullSecret }}
      imagePullSecrets:
      - name: {{ $.Values.celery.imagePullSecret }}
      {{- end }}
      containers:
      - name: {{ template "esgf-compute-wps.name" $ }}-celery-backend
        image: {{ $.Values.celery.image }}:{{ $.Values.celery.imageTag }}
        imagePullPolicy: {{ $.Values.celery.imagePullPolicy }}
        {{- if $.Values.celery.backend.development }}
        command:
          - /bin/sleep
          - infinity
        {{- else }}
        command:
          - tini
          - --
        args:
          - /bin/bash
          - -c
          - "mkdir -p /metrics && compute-tasks-backend"
        {{- end }}
        resources:
          {{ $.Values.celery.backend.resources | toYaml | trimSuffix "\n" | nindent 10 }}
        env:
        {{- if $.Values.celery.backend.development }}
        - name: DEV
          value: "1"
        {{- end }}
        - name: NAMESPACE
          value: {{ $.Release.Namespace }}
        - name: IMAGE
          value: {{ $.Values.celery.image }}:{{ $.Values.celery.imageTag }}
        - name: IMAGE_PULL_SECRET
          value: {{ $.Values.celery.imagePullSecret }}
        - name: IMAGE_PULL_POLICY
          value: {{ $.Values.celery.imagePullPolicy }}
        - name: DATA_CLAIM_NAME
          value: {{ $.Values.persistence.dataClaimName }}
        - name: PROVISIONER_BACKEND
          value: {{ template "esgf-compute-wps.fullname" $ }}-provisioner.{{ $.Release.Namespace }}.svc:{{ $.Values.provisioner.backendPort }}
        - name: INTERNAL_LB
          value: {{ template "traefik.fullname" $ }}.{{ $.Release.Namespace }}.svc
        - name: API_USERNAME
          value: {{ $.Values.wps.apiUsername }}
        - name: API_PASSWORD
          value: {{ $.Values.wps.apiPassword }}
        - name: CELERY_BROKER_URL
          value: redis://{{ template "redis.fullname" $ }}-master/0
        - name: CELERY_RESULT_BACKEND
          value: redis://{{ template "redis.fullname" $ }}-master/0
        - name: WORKERS
          value: {{ $.Values.provisioner.workers | quote }}
        - name: DATA_PATH
          value: /data/public
        volumeMounts:
        {{- if $.Values.celery.backend.development }}
        - name: devel-volume
          mountPath: /devel
        {{- end }}
        - mountPath: /metrics
          name: metrics-volume
      volumes:
      {{- if or $.Values.celery.development $.Values.celery.backend.development }}
      - name: devel-volume
        hostPath: 
          path: /opt/cwt/devel
          type: DirectoryOrCreate
      {{- end }}
      - name: metrics-volume
        emptyDir: {}
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ $.Values.persistence.dataClaimName | default "data-pvc" }}
