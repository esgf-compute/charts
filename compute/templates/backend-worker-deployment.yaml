apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "compute.backend.fullname" . }}-worker
  labels:
  {{- include "compute.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.worker.replicas }}
  selector:
    matchLabels:
    {{- include "compute.backend.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "compute.backend.matchLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ list (include (print .Template.BasePath "/wps-secret.yaml") .) (include (print .Template.BasePath "/backend-configmap.yaml") .) | join " " | sha256sum }}
      {{- if .Values.backend.annotations }}
      {{- .Values.backend.worker.annotations | toYaml | trimSuffix "\n" | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.backend.worker.nodeSelector }}
      nodeSelector: 
      {{ .Values.backend.worker.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{ .Values.imagePullSecrets | toYaml | nindent 8 }}
      {{- end }}
      containers:
      - name: worker
        image: {{ .Values.backend.image }}:{{ .Values.backend.imageTag }}
        imagePullPolicy: {{ .Values.backend.imagePullPolicy }}
        args: 
          - /bin/bash
          - entrypoint.sh
          - "-c"
          - "1"
          - "-Q"
          - "ingress"
          - "-l"
          - "INFO"
          - "--max-tasks-per-child"
          - "1"
        livenessProbe:
          exec:
            command:
            - bash
            - /healthcheck.sh
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - bash
            - /healthcheck.sh
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        resources: 
        {{ .Values.backend.worker.resources | toYaml | nindent 10 }}
        env:
        - name: PROMETHEUS_HOST
          value: {{ required "Set backend.prometheusUrl" .Values.backend.prometheusUrl }}
        envFrom:
        - secretRef:
            name: {{ template "compute.wps.fullname" . }}
        - configMapRef:
            name: {{ template "compute.backend.fullname" . }}-backend
        volumeMounts:
        - mountPath: /data/public
          name: data-volume
      {{- range .Values.backend.localMapping.mounts }}
        - name: mapping-{{ .path | toString | sha256sum | substr 0 8}}
          mountPath: {{ .path }}
          readOnly: true
      {{- end }}
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "compute.fullname" .) }}
    {{- range .Values.backend.localMapping.mounts }}
      {{- if eq .type "hostpath" }}
      - name: mapping-{{ .path | toString | sha256sum | substr 0 8}}
        hostPath:
          path: {{ .path }}
      {{- end }}
    {{- end }}
