apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "compute.backend.fullname" . }}-backend
  labels:
    {{- include "compute.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
    {{- include "compute.backend.matchLabels" . | nindent 6 }}
      component/part: backend
  template:
    metadata:
      labels:
      {{- include "compute.backend.matchLabels" . | nindent 8 }}
        component/part: backend
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/backend-configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.backend.nodeSelector }}
      nodeSelector: 
      {{ .Values.backend.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{ .Values.imagePullSecrets | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
      - name: register
        image: {{ .Values.backend.image }}:{{ .Values.backend.imageTag }}
        imagePullPolicy: {{ .Values.backend.imagePullPolicy }}
        args:
          - /bin/bash
          - -c
          - "until nslookup ${API_HOST}; do echo 'Waiting'; done; compute-tasks-register"
        resources:
        {{ .Values.backend.resources | toYaml | nindent 10 }}
        envFrom:
        - configMapRef:
            name: {{ template "compute.backend.fullname" . }}-backend
      containers:
      - name: backend
        image: {{ .Values.backend.image }}:{{ .Values.backend.imageTag }}
        imagePullPolicy: {{ .Values.backend.imagePullPolicy }}
        args:
          - /bin/bash
          - -c
          - "compute-tasks-backend --queue-host ${PROVISIONER_BACKEND}"
        resources:
        {{ .Values.backend.resources | toYaml | nindent 10 }}
        envFrom:
        - configMapRef:
            name: {{ template "compute.backend.fullname" . }}-backend
        volumeMounts:
        - mountPath: /etc/config
          name: mapping-volume
      {{- range .Values.backend.localMapping.mounts }}
        - name: mapping-{{ .path | toString | sha256sum | substr 0 8}}
          mountPath: {{ .path }}
          readOnly: true
      {{- end }}
      volumes:
      - name: mapping-volume
        configMap:
          name: {{ template "compute.backend.fullname" . }}-mapping
    {{- range .Values.backend.localMapping.mounts }}
      {{- if eq .type "hostpath" }}
      - name: mapping-{{ .path | toString | sha256sum | substr 0 8}}
        hostPath:
          path: {{ .path }}
      {{- end }}
    {{- end }}
