apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "compute.wps.fullname" $ }}
  labels:
  {{- include "compute.wps.labels" $ | nindent 4 }}
spec:
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
    {{- include "compute.wps.matchLabels" $ | nindent 6 }}
      component/part: wps
  template:
    metadata:
      labels:
      {{- include "compute.wps.matchLabels" $ | nindent 8 }}
        component/part: wps
      annotations:
        checksum/config: {{ list (include (print $.Template.BasePath "/wps-beat-configmap.yaml") $) (include (print $.Template.BasePath "/wps-secret.yaml") $) (include (print $.Template.BasePath "/wps-configmap.yaml") $) | join " " | sha256sum }}
      {{- if $.Values.wps.annotations }}
      {{- $.Values.wps.annotations | toYaml | nindent 8 }}
      {{- end }}
    spec:
      {{- if $.Values.wps.nodeSelector }}
      nodeSelector: 
      {{- $.Values.wps.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if $.Values.imagePullSecrets }}
      imagePullSecrets:
      {{- $.Values.imagePullSecrets | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
      - name: migrate-db
        image: {{ $.Values.wps.image }}:{{ $.Values.wps.imageTag }}
        imagePullPolicy: {{ $.Values.wps.imagePullPolicy }}
        command: ["/bin/bash", "init.sh"]
        envFrom:
        - configMapRef:
            name: {{ template "compute.wps.fullname" $ }}-beat
        - secretRef:
            name: {{ template "compute.wps.fullname" $ }}
        resources:
        {{ $.Values.wps.resources | toYaml | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
      containers:
      - name: wps
        image: {{ $.Values.wps.image }}:{{ $.Values.wps.imageTag }}
        imagePullPolicy: {{ $.Values.wps.imagePullPolicy }}
        command: ["/bin/bash", "entrypoint.sh"]
        livenessProbe:
          httpGet:
            path: /api/ping/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/ping/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        resources:
        {{ $.Values.wps.resources | toYaml | nindent 10 }}
        envFrom:
        - configMapRef:
            name: {{ template "compute.wps.fullname" $ }}-beat
        - secretRef:
            name: {{ template "compute.wps.fullname" $ }}
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /data/public
          name: data-volume
      volumes:
      - name: config-volume
        configMap:
          name: {{ template "compute.wps.fullname" $ }}
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ $.Values.persistence.dataClaimName | default "data-pvc" }}
