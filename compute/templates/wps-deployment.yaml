{{- range .Values.wps.instances }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "esgf-compute-wps.fullname" $ }}-wps-{{ .name }}
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
spec:
  replicas: {{ $.Values.wps.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/component: wps-{{ .name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "esgf-compute-wps.name" $ }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: wps-{{ .name }}
      annotations:
        checksum/config: {{ list (include (print $.Template.BasePath "/wps-beat-configmap.yaml") $) (include (print $.Template.BasePath "/wps-secret.yaml") $) (include (print $.Template.BasePath "/wps-configmap.yaml") $) | join " " | sha256sum }}
      {{- $.Values.wps.annotations | toYaml | trimSuffix "\n" | nindent 8 }}
    spec:
      {{- if $.Values.wps.nodeSelector }}
      nodeSelector: 
        {{ $.Values.wps.nodeSelector | toYaml | trimSuffix "\n" }}
      {{- end }}
      {{- if $.Values.wps.imagePullSecret }}
      imagePullSecrets:
      - name: {{ $.Values.wps.imagePullSecret }}
      {{- end }}
      containers:
      - name: wps
        image: {{ $.Values.wps.image }}:{{ $.Values.wps.imageTag }}
        imagePullPolicy: {{ $.Values.wps.imagePullPolicy }}
        {{- if $.Values.wps.development }}
        command:
          - tini
          - --
          - sleep
          - infinity
        {{- end }}
        livenessProbe:
          httpGet:
            path: /api/ping/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/ping/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        resources: {{ $.Values.wps.resources | toYaml | trimSuffix "\n" | nindent 10 }}
        env:
        {{- if $.Values.wps.development }}
        - name: DEV
          value: "1"
        - name: WPS_DEBUG
          value: "1"
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ template "esgf-compute-wps.fullname" $ }}-wps-beat-config
        - secretRef:
            name: {{ template "esgf-compute-wps.fullname" $ }}-wps-secret
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - mountPath: /data/public
          name: data-volume
          subPath: public
      volumes:
      - name: config-volume
        configMap:
          name: {{ template "esgf-compute-wps.fullname" $ }}-wps-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ $.Values.persistence.dataClaimName | default "data-pvc" }}
---
{{- end }}
