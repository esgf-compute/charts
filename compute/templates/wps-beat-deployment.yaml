{{- if .Values.wps.beat.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "compute.wps.fullname" . }}-beat
  labels:
  {{- include "compute.wps.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.wps.replicas }}
  selector:
    matchLabels:
    {{- include "compute.wps.matchLabels" . | nindent 6 }}
      component/part: beat
  template:
    metadata:
      labels:
      {{- include "compute.wps.matchLabels" . | nindent 8 }}
        component/part: beat
      annotations:
        checksum/config: {{ list (include (print .Template.BasePath "/wps-secret.yaml") .) (include (print .Template.BasePath "/celery-backend-configmap.yaml") .) | join " " | sha256sum }}
    spec:
      {{- if .Values.wps.nodeSelector }}
      nodeSelector: 
      {{ .Values.wps.nodeSelector | toYaml | nindent 10 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{ .Values.imagePullSecrets | toYaml | nindent 10 }}
      {{- end }}
      containers:
      - name: beat
        image: {{ .Values.wps.image }}:{{ .Values.wps.imageTag }}
        imagePullPolicy: {{ .Values.wps.imagePullPolicy }}
        command:
          - /tini
          - --
        args:
          - celery
          - worker
          - -A
          - compute_wps.tasks
          - -n
          - periodic
          - -l
          - INFO
          - -c
          - "1"
          - -Q
          - periodic
          - --without-gossip
          - --without-mingle
          - -B
        livenessProbe:
          exec:
            command:
            - celery
            - inspect
            - -d
            - celery@periodic
            - ping
          initialDelaySeconds: 15
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
            - celery
            - inspect
            - -d
            - celery@periodic
            - ping
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
        {{ .Values.wps.beat.resources | toYaml | nindent 10 }}
        envFrom:
        - configMapRef:
            name: {{ template "compute.wps.fullname" . }}-beat
        - secretRef:
            name: {{ template "compute.wps.fullname" . }}
        volumeMounts:
        - mountPath: /data/public
          name: data-volume
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.dataClaimName }}
{{- end }}
