# There are container container specific development flags that will start the container
# with "/bin/sleep infinity" rather than their default command. This allows a user to 
# open a terminal in the container and customize the environment for development.
#
# Setting the development flag to true will disable any health or liveness checks.
development: false

# Internal HTTP/TCP load balancer
traefik:
  serviceType: NodePort

  rbac:
    enabled: true

  ssl:
    enabled: true
    enforced: true
    tlsMinVersion: VersionTLS12
    cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
    - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
    - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
    - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
    - TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
    generateTLS: true

  dashboard:
    enabled: true
    domain: ''
    ingress:
      annotations:
        traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
      labels:
        traffic-type: external

  # This traefik instance will only handle ingress objects with these labels
  kubernetes:
    labelSelector: traffic-type=internal

  metrics:
    prometheus:
      enabled: true
      restrictAccess: true

# Persistence
# 
# For each entry below a PersistentVolume (PV) and PersistentVolumeClaim (PVC) is created.
# The created PVs will use the path value to populate HostPath types. If dynamic provisioning
# is required each path value will need to be deleted and the appropriate storageClassName
# will need to be set. This will prevent the chart from creating PersistenVolume allowing
# the PVCs to bind to the PVs created by the dynamic provisioner. e.g.
#
# persistence:
#   public:
#     path: ...
#
# persistence:
#   public:
#     storageClassName: cephfs-default # Storage class that will be used for the PVs
#     path: null
persistence: {}

userResources:
  workers: 2

  limit:
    cpu: 4
    memory: 4Gi
  request:
    cpu: 4
    memory: 4Gi

# Provisioner
provisioner:
  nodeSelector: {}

  image: aims2.llnl.gov/compute-provisioner
  imageTag: 77e4850c
  imagePullPolicy: Always

  frontendPort: 7777
  backendPort: 7778

  timeout: 60
  # Number of seconds that a users dask scheduler and workers will live for (default: 1 hour).
  lifetime: 3600

  resources: {}

nginx:
  replicas: 1

  nodeSelector: {}

  image: aims2.llnl.gov/compute-webapp
  imageTag: 5f96e429
  imagePullPolicy: Always

  resources: {}

  ingress:
    annotations: {}

    labels:
      traffic-type: external

wps:
  nodeSelector: {}

  replicas: 1
  image: aims2.llnl.gov/compute-wps
  imageTag: b88dca71
  imagePullPolicy: Always

  beat:
    enabled: true
    development: false

    # Days until a job expires
    jobExpiration: 30
    # Days before expiration to warn
    jobWarn: 10

    # Configure the celery crontab https://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html#crontab-schedules
    crontabHour: 23
    crontabMinute: 0

    resources: {}

  # Set to external hostname of cluster
  externalHost: 127.0.0.1
  allowedCIDR: 172.17.0.0/16

  apiUsername: wps_api_username
  apiPassword: wps_api_password

  adminEmail: admin@wps

  # Configure the values that will be used in creating WPS responses
  title: LLNL WPS Server
  abstract: LLNL WPS Compute Service
  keywords:
  - WPS

  provider:
    name: Admin
    site: https://aims2.llnl.gov

  contact:
    name:
    position:
    phone:

  address:
    delivery:
    city:
    area:
    postal:
    counter:
    email:

  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: /api/metrics/
    prometheus.io/port: '8000'

  resources: {}

  # OAuth configuration
  oauth:
    client: fake_oauth_client
    secret: fake_oauth_secret

  email:
    host: email@host
    port: 25
    user: ''
    password: ''

  ingress:
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      ingress.kubernetes.io/hsts-max-age: '31536000'
      ingress.kubernetes.io/hsts-include-subdomains: 'true'
      ingress.kubernetes.io/force-hsts: 'true'

  instances:
  - name: external
    enabled: true
    paths:
    - /api
    - /wps
    labels:
      traffic-type: external
  - name: internal
    enabled: true
    paths:
    - /internal_api
    labels:
      traffic-type: internal

celery:
  replicas: 1
  annotations: {}
  nodeSelector: {}

  image: aims2.llnl.gov/compute-tasks
  imageTag: 652dc588
  imagePullPolicy: Always

  prometheusUrl: prometheus.host

  resources: {}

  backend:
    replicas: 1

    development: false

    workerNThreads: 1
    schedulerCpu: 1
    schedulerMemory: 1Gi

    trafficType: external

    resources: {}

  metrics:
    resources: {}

    service:
      port: 8080

      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '8080'

thredds:
  nodeSelector: {}

  replicas: 1
  image: aims2.llnl.gov/compute-thredds
  imageTag: ec3a3b4e
  imagePullPolicy: Always

  # Set java parameters for tomcat server
  heapMax: 1g
  heapInit: 512m

  resources: {}

  ingress:
    path: /threddsCWT

    annotations: {}

    labels:
      traffic-type: external

postgresql:
  image:
    debug: true
  postgresqlUsername: postgres
  postgresqlPassword: abcd1234
  port: 5432

  master:
    nodeSelector: {}

  persistence:
    enabled: false
    existingClaim: postgresql-pvc

  backup:
    enabled: false
    image: bitnami/postgresql
    tag: 10.6.0

  resources: {}

redis:
  cluster:
    enabled: false

  usePassword: false

  # Cannot use permission init container when using existing claim 
  # chown -R 1001:1001
  persistence:
    enabled: false
    existingClaim: redis-pvc

  master:
    service:
      type: ClusterIP

    resources: {}

    nodeSelector: {}

prometheus:
  enabled: false

twitcher:
  enabled: false

  image: birdhouse/twitcher
  imageTag: latest

  resources: {}

  ingress:
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      ingress.kubernetes.io/hsts-max-age: '31536000'
      ingress.kubernetes.io/hsts-include-subdomains: 'true'
      ingress.kubernetes.io/force-hsts: 'true'
    labels:
      traffic-type: external
