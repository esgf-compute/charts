prometheusOperator:
  enabled: false

persistence:
  dataClaimName: compute-data

imagePullSecrets: []
# - name: docker-registry

# User resources
# 
# Per worker allocation is calculate as follows
# worker cpu and memory = (total - scheduler) / instances
userResources:
  # Total resources allocated for a single user
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 2
      memory: 2Gi

  scheduler:
    resources:
      limits:
        cpu: 1
        memory: 512Mi

  worker:
    nThreads: 2
    instances: 2

# Provisioner
provisioner:
  name: provisioner

  nodeSelector: {}

  image: nimbus16.llnl.gov:8443/public/compute-provisioner
  imageTag: 2.3.0
  imagePullPolicy: Always

  frontendPort: 7777
  backendPort: 7778

  timeout: 60
  lifetime: 240

  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 128Mi
    # request:
    #   cpu: 100m
    #   memory: 32Mi

nginx:
  enabled: true

  name: nginx
  nodeSelector: {}
  replicas: 1
  image: nimbus16.llnl.gov:8443/public/compute-webapp
  imageTag: 2.3.0
  imagePullPolicy: Always

  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 1Gi
    # requests:
    #   cpu: 100m
    #   memory: 256Mi

  ingress:
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      ingress.kubernetes.io/hsts-max-age: '31536000'
      ingress.kubernetes.io/hsts-include-subdomains: 'true'
      ingress.kubernetes.io/force-hsts: 'true'

    labels: {}

wps:
  name: wps
  nodeSelector: {}
  replicas: 1
  image: nimbus16.llnl.gov:8443/public/compute-wps
  imageTag: 2.3.0
  imagePullPolicy: Always

  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 200m
    #   memory: 256Mi

  beat:
    enabled: true
    development: false

    # Days until a job expires
    jobExpiration: 30
    # Days before expiration to warn
    jobWarn: 10

    # Configure the celery crontab https://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html#crontab-schedules
    crontabHour: 23
    crontabMinute: 0

    resources: {}
      # limits:
      #   cpu: 500m
      #   memory: 512Mi
      # requests:
      #   cpu: 200m
      #   memory: 256Mi

  # Set to external hostname of cluster
  externalHost: 127.0.0.1
  allowedCIDR: 172.17.0.0/16

  apiUsername: default_api_username
  apiPassword: default_api_password

  adminEmail: admin@wps.local

  # Configure the values that will be used in creating WPS responses
  title: LLNL WPS Server
  abstract: LLNL WPS Compute Service
  keywords:
  - WPS

  provider:
    name: ESGF
    site: https://esgf.llnl.gov

  contact:
    name:
    position:
    phone:

  address:
    delivery:
    city:
    area:
    postal:
    counter:
    email:

  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: /api/metrics/
    prometheus.io/port: '8000'

  # OAuth configuration
  oauth:
    client: fake_oauth_client
    secret: fake_oauth_secret

  email:
    host: user@wps.local
    port: 25
    user: ''
    password: ''

  ingress:
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      ingress.kubernetes.io/hsts-max-age: '31536000'
      ingress.kubernetes.io/hsts-include-subdomains: 'true'
      ingress.kubernetes.io/force-hsts: 'true'

  instances:
  - name: external
    enabled: true
    paths:
    - /api
    - /wps
  - name: internal
    enabled: true
    paths:
    - /internal_api

celery:
  name: celery

  replicas: 1
  annotations: {}
  nodeSelector: {}

  image: nimbus16.llnl.gov:8443/public/compute-tasks
  imageTag: 2.3.0
  imagePullPolicy: Always

  prometheusUrl: prometheus.host

  resources: {}
    # limits:
    #   cpu: 1
    #   memory: 2Gi
    # requests:
    #   cpu: 500m
    #   memory: 1Gi

  backend:
    replicas: 1

    development: false

    redisDB: 3

    trafficType: external

    # Provides mapping for local data
    # mounts and the mapping will be available to a compute backend to translate urls to local data paths.
    localMapping: {}
    #   mounts:
    #     - path: /data
    #       type: hostpath
    #   mapping:
    #     test: /data/test

    resources: {}
      # limits:
      #   cpu: 1
      #   memory: 2Gi
      # requests:
      #   cpu: 500m
      #   memory: 1Gi

  metrics:
    resources: {}
      # limits:
      #   cpu: 1
      #   memory: 2Gi
      # requests:
      #   cpu: 500m
      #   memory: 1Gi


    service:
      port: 8080

      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '8080'

thredds:
  name: thredds

  nodeSelector: {}

  replicas: 1
  image: nimbus16.llnl.gov:8443/public/compute-thredds
  imageTag: 2.3.0
  imagePullPolicy: Always

  # Set java parameters for tomcat server
  heapMax: 1g
  heapInit: 512m

  resources: {}
    # limits:
    #   cpu: 1
    #   memory: 2Gi
    # requests:
    #   cpu: 500m
    #   memory: 512Mi

  ingress:
    path: /threddsCWT

    annotations: {}
    labels: {}

postgresql:
  postgresqlUsername: postgres
  postgresqlPassword: abcd1234
  port: 5432

  master:
    nodeSelector: {}

  persistence:
    enabled: false
    existingClaim: postgresql-pvc

  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 250m
    #   memory: 256Mi

redis:
  cluster:
    enabled: false

  usePassword: false

  persistence:
    existingClaim:

  master:
    persistence:
      enabled: false

    resources: {}
      # limits:
      #   cpu: 2
      #   memory: 4Gi
      # requests:
      #   cpu: 2
      #   memory: 4Gi

    nodeSelector: {}

  slave:
    persistence:
      enabled: false

    resources: {}
      # limits:
      #   cpu: 2
      #   memory: 4Gi
      # requests:
      #   cpu: 2
      #   memory: 4Gi

  sentinel:
    persistence:
      enabled: false

    resources: {}
      # limit:
      #   cpu: 500m
      #   memory: 512Mi
      # requests:
      #   cpu: 100m
      #   memory: 256Mi

twitcher:
  enabled: false

  image: birdhouse/twitcher
  imageTag: latest

  resources: {}

  ingress:
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      ingress.kubernetes.io/hsts-max-age: '31536000'
      ingress.kubernetes.io/hsts-include-subdomains: 'true'
      ingress.kubernetes.io/force-hsts: 'true'
    labels:
      traffic-type: external
