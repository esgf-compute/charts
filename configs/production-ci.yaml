traefik:
  dashboard:
    ingress:
      annotations:
        ingress.kubernetes.io/ssl-redirect: 'true'
        ingress.kubernetes.io/hsts-max-age: '31536000'
        ingress.kubernetes.io/hsts-include-subdomains: 'true'
        ingress.kubernetes.io/force-hsts: 'true'

persistence:
  dataClaimName: data-pvc

  volumes:
    data:
      storageClassName: slow
      capacity: 100Gi
      path: /p/cscratch/nimbus/wps/data

    postgresql:
      storageClassName: slow
      capacity: 10Gi
      path: /opt/nimbus/wps/postgresql

    redis:
      storageClassName: slow
      capacity: 10Gi
      path: /opt/nimbus/wps/redis

wps:
  image: aims2.llnl.gov/compute-wps
  imageTag: ad1974b9
  imagePullPolicy: Always
  imagePullSecret: docker-registry

  nodeSelector:
    tier: backend

  oauth:
    client:
    secret:

  apiUsername:
  apiPassword:

  externalHost:

  email:
    host:

  adminEmail:

celery:
  image: aims2.llnl.gov/compute-tasks
  imageTag: ad1974b9
  imagePullPolicy: Always
  imagePullSecret: docker-registry

  nodeSelector:
    tier: backend

  prometheusUrl:

provisioner:
  image: aims2.llnl.gov/compute-provisioner
  imageTag: ad1974b9
  imagePullPolicy: Always
  imagePullSecret: docker-registry

  timeout: 60

  lifetime: 480

  nodeSelector:
    tier: backend

nginx:
  image: aims2.llnl.gov/compute-webapp
  imageTag: 9d808f11
  imagePullPolicy: Always
  imagePullSecret: docker-registry

  nodeSelector:
    tier: backend

  ingress:
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      ingress.kubernetes.io/hsts-max-age: '31536000'
      ingress.kubernetes.io/hsts-include-subdomains: 'true'
      ingress.kubernetes.io/force-hsts: 'true'

thredds:
  image: aims2.llnl.gov/compute-thredds
  imageTag: ec3a3b4e
  imagePullPolicy: Always
  imagePullSecret: docker-registry

  nodeSelector:
    tier: backend

  ingress:
    annotations:
      ingress.kubernetes.io/ssl-redirect: 'true'
      ingress.kubernetes.io/hsts-max-age: '31536000'
      ingress.kubernetes.io/hsts-include-subdomains: 'true'
      ingress.kubernetes.io/force-hsts: 'true'

postgresql:
  postgresqlPassword:

  master:
    nodeSelector:
      tier: backend
      storage/wps: local

redis:
  master:
    nodeSelector:
      tier: backend
      storage/wps: local

prometheus:
  enabled: false
